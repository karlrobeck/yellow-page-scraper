// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: business-info.sql

package models

import (
	"context"
	"database/sql"
)

const createBusinessInfo = `-- name: CreateBusinessInfo :one
insert into business_info (
  trade_name,
  business_name,
  address,
  phone_number,
  email,
  website,
  social_media,
  canonical_link,
  rating
) values (
  ?,?,?,?,?,?,?,?,?
) returning id, trade_name, business_name, address, phone_number, email, website, social_media, canonical_link, rating
`

type CreateBusinessInfoParams struct {
	TradeName     sql.NullString
	BusinessName  sql.NullString
	Address       sql.NullString
	PhoneNumber   sql.NullString
	Email         sql.NullString
	Website       sql.NullString
	SocialMedia   sql.NullString
	CanonicalLink string
	Rating        sql.NullFloat64
}

func (q *Queries) CreateBusinessInfo(ctx context.Context, arg CreateBusinessInfoParams) (BusinessInfo, error) {
	row := q.db.QueryRowContext(ctx, createBusinessInfo,
		arg.TradeName,
		arg.BusinessName,
		arg.Address,
		arg.PhoneNumber,
		arg.Email,
		arg.Website,
		arg.SocialMedia,
		arg.CanonicalLink,
		arg.Rating,
	)
	var i BusinessInfo
	err := row.Scan(
		&i.ID,
		&i.TradeName,
		&i.BusinessName,
		&i.Address,
		&i.PhoneNumber,
		&i.Email,
		&i.Website,
		&i.SocialMedia,
		&i.CanonicalLink,
		&i.Rating,
	)
	return i, err
}

const getBusinessInfo = `-- name: GetBusinessInfo :one
select id, trade_name, business_name, address, phone_number, email, website, social_media, canonical_link, rating from business_info where canonical_link = ?
`

func (q *Queries) GetBusinessInfo(ctx context.Context, canonicalLink string) (BusinessInfo, error) {
	row := q.db.QueryRowContext(ctx, getBusinessInfo, canonicalLink)
	var i BusinessInfo
	err := row.Scan(
		&i.ID,
		&i.TradeName,
		&i.BusinessName,
		&i.Address,
		&i.PhoneNumber,
		&i.Email,
		&i.Website,
		&i.SocialMedia,
		&i.CanonicalLink,
		&i.Rating,
	)
	return i, err
}
